name: Build Desktop App

on:
  workflow_run:
    workflows: [Unit tests]
    types:
      - completed
    branches:
      - main

jobs:
  build:
    # Only run this job if the triggering workflow run was successful
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Build for ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            args: '' # No specific target needed for default Linux build
          - os: macos-latest
            args: '--target aarch64-apple-darwin' # ARM Macs
          - os: macos-latest
            args: '--target x86_64-apple-darwin' # Intel Macs
          - os: windows-latest
            args: '' # No specific target needed for default Windows build

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Match .nvmrc if possible

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          # Install specific targets only on macOS runners
          targets: ${{ matrix.os == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install Linux dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev build-essential curl wget file libssl-dev libayatana-appindicator3-dev librsvg2-dev

      # macOS dependencies (Xcode CLI) are usually pre-installed on GitHub runners
      # Windows dependencies (MSVC Build Tools, WebView2) are usually pre-installed

      - name: Install frontend dependencies
        run: npm install

      - name: Build Tauri app
        # Pass target args from matrix. Empty for Linux/Windows, specific for macOS
        run: npx tauri build ${{ matrix.args }}

      - name: Upload Artifact (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: gratheon-linux-${{ github.sha }}
          path: src-tauri/target/release/bundle/appimage/*.AppImage # Corrected path

      - name: Upload Artifact (macOS - Universal/Specific Arch)
        # This step needs adjustment based on whether tauri build --target creates arch-specific folders
        # Assuming it does for now, or creates arch-specific .app names
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          # Include architecture in the artifact name
          name: gratheon-macos-${{ matrix.args == '--target aarch64-apple-darwin' && 'arm64' || 'x64' }}-${{ github.sha }}
          # Adjust path based on target - needs verification after a successful build run
          # Common patterns: src-tauri/target/{target_triple}/release/bundle/macos/*.app
          # Or: src-tauri/target/release/bundle/macos/*{arch_suffix}.app
          # Using a generic path for now, might need refinement:
          path: src-tauri/target/**/release/bundle/macos/*.app

      - name: Upload Artifact (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: gratheon-windows-${{ github.sha }}
          path: src-tauri/target/release/bundle/msi/*.msi # Corrected path
